.reg .u32       tid_x;
.reg .u64       tid_x_64;
.reg .u32       ntid_x;
.reg .u32       ctaid_x;
.reg .u64       global_id_64;
mov.u32         tid_x, %tid.x;
cvt.u64.u32     tid_x_64, tid_x;
mov.u32         ctaid_x, %ctaid.x;
mov.u32         ntid_x, %ntid.x;
mad.wide.u32    global_id_64, ntid_x, ctaid_x, tid_x_64;

mad.lo.u64      input_addr, global_id_64, <INPUT_SIZE>, input_addr;
mad.lo.u64      output_addr, global_id_64, <OUTPUT_SIZE>, output_addr;

.reg .<INPUT>   value_in;
.reg .<OUTPUT>  value_out;

ld.<INPUT_LD>   value_in, [input_addr];
cvt<MODIFIERS>.<OUTPUT>.<INPUT>    value_out, value_in;
st.<OUTPUT_ST>  [output_addr], value_out;
