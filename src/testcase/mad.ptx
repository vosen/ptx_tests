.reg .u32       tid_x;
.reg .u64       tid_x_64;
.reg .u32       ntid_x;
.reg .u32       ctaid_x;
.reg .u64       global_id_64;
mov.u32         tid_x, %tid.x;
cvt.u64.u32     tid_x_64, tid_x;
mov.u32         ctaid_x, %ctaid.x;
mov.u32         ntid_x, %ntid.x;
mad.wide.u32    global_id_64, ntid_x, ctaid_x, tid_x_64;

mad.lo.u64      input_a_addr, global_id_64, <STYPE_SIZE>, input_a_addr;
mad.lo.u64      input_b_addr, global_id_64, <STYPE_SIZE>, input_b_addr;
mad.lo.u64      input_c_addr, global_id_64, <DTYPE_SIZE>, input_c_addr;
mad.lo.u64      output_addr,  global_id_64, <DTYPE_SIZE>, output_addr;

.reg .<STYPE>       a;
.reg .<STYPE>       b;
.reg .<DTYPE>       c;
.reg .<DTYPE>       result;

ld.<STYPE>          a, [input_a_addr];
ld.<STYPE>          b, [input_b_addr];
ld.<DTYPE>          c, [input_c_addr];

mad.<MODE><SAT>.<STYPE>  result, a, b, c;
st.<DTYPE>          [output_addr], result;